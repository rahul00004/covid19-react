{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","console","log","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barchart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8557c36c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1WBhL\",\"card\":\"Cards_card__1QsHl\",\"infected\":\"Cards_infected__2g25f\",\"recovered\":\"Cards_recovered__1kO05\",\"deaths\":\"Cards_deaths__Nr8lK\"};","import React from 'react';\r\nimport { Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\n import CountUp from 'react-countup';\r\n import cx from 'classnames';\r\nconst Cards = ( {data:{ confirmed, recovered, deaths, lastUpdate } } ) => {\r\n if (!confirmed){\r\n     return 'Loading...'\r\n }       \r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color ='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\" ><CountUp\r\n                        start={0} end ={confirmed.value}\r\n                        duration={2.5} seperator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of active cases of covid19</Typography>\r\n                     \r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color ='textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\" ><CountUp\r\n                        start={0} end ={recovered.value}\r\n                        duration={2.5} seperator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of recoveries cases of covid19</Typography>\r\n                     \r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color ='textSecondary' gutterBottom>deaths</Typography>\r\n                        <Typography variant=\"h5\" ><CountUp\r\n                        start={0} end ={deaths.value}\r\n                        duration={2.5} seperator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of Deaths cases of covid19</Typography>\r\n                     \r\n                    </CardContent>\r\n\r\n                </Grid> \r\n\r\n            </Grid>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cards;","import axios from 'axios'\r\n\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl = url;\r\n    if (country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n\r\n    }\r\ntry { \r\n    const {data: {confirmed,recovered,deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n    return {confirmed,recovered,deaths,lastUpdate}\r\n    \r\n    \r\n} catch (error) {\r\n    \r\n}\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n     try {\r\n         const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) =>( { \r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }))\r\n        return modifiedData\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>{\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name)\r\n        \r\n        \r\n  \r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\n\r\nimport{fetchDailyData} from  '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'\r\n\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\r\n    const [dailyData,setDailyData] = useState ([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        } \r\n\r\n\r\n        \r\n        fetchAPI()\r\n    },[]);\r\n\r\n     \r\n    \r\n\r\nconst lineChart = (\r\n    dailyData.length?<Line\r\n    \r\n    data={{\r\n        labels:dailyData.map(({date})=>date),\r\n        datasets:[{ \r\n            data:dailyData.map(({confirmed})=>confirmed),\r\n            label:\"Infected\",\r\n            borderColor:'#3333ff',\r\n            fill:true\r\n\r\n\r\n        }, {\r\n\r\n            data:dailyData.map(({deaths})=>deaths),\r\n            label:\"Deaths\",\r\n            borderColor:'red',\r\n            backgroundColor:'rgba(255,0,0,0.5)',\r\n            fill:true,\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n        }],\r\n    }}\r\n    \r\n    \r\n    \r\n    />:null\r\n\r\n    )\r\n\r\n\r\n    const barchart = (\r\n        confirmed\r\n        ?(\r\n            <Bar \r\n            data ={\r\n                {\r\n                labels:['infected','recovererd','deaths']\r\n               ,\r\n               datasets:[{\r\n                   label:'People',\r\n                   backgroundColor:[\r\n                    \r\n                        ' rgba(0,0,255,0.5)',\r\n                      ' rgba(0,255,0,0.5)',\r\n                      'rgba(255,0,0,0.5)',\r\n                   \r\n\r\n                   ],\r\n                   data:[confirmed.value,recovered.value,deaths.value]\r\n               }]\r\n             }\r\n            }\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true,text:`Current state is ${country}`}\r\n            }}\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            />\r\n        ):null\r\n\r\n\r\n\r\n    )\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n        {country?barchart :lineChart}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Chart;  ","import React,{useState,useEffect} from 'react';\r\n\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api';\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries()) \r\n         } \r\n        fetchAPI();\r\nconsole.log(fetchCountries);\r\n\r\n\r\n    },[setFetchedCountries])\r\n\r\n\r\nconsole.log(fetchCountries);\r\n\r\n    return (\r\n     <FormControl className ={styles.formControl}>\r\n         <NativeSelect defaultValue=\"\"  onChange={(e)=> handleCountryChange(e.target.value)}  >\r\n             <option value ='global' >Global</option>\r\n             {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n         </NativeSelect>\r\n\r\n\r\n     </FormControl>\r\n    )\r\n}\r\n\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from  './App.module.css';\r\nimport { fetchData } from './api'\r\n\r\nclass  App extends React.Component {\r\n\r\n    state={\r\n        data: {},\r\n        country:''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({data:fetchedData})\r\n    \r\n    \r\n    \r\n    \r\n    }\r\n\r\n\r\nhandleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({data:fetchedData,country:country})\r\n    \r\n\r\n}\r\n\r\n     \r\n\r\n    render() {\r\n        const{data, country} = this.state\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n \r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3G6MF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3zBsG\"};"],"sourceRoot":""}